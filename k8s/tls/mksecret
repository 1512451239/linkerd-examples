#!/bin/bash

set -eu

USAGE="usage: $0 svcname [namespace]"

cd -P "$(dirname "${BASH_SOURCE[0]}")"

if [ -z "${1:-}" ]; then
  echo "$USAGE" >&2
  exit 64
fi

SERVICE_NAME="$1"
NAMESPACE="${2:-default}"

if [ ! -r ca/cert.pem ]; then
  echo "must initialize the CA with mkca" >&2
  exit 1
fi

# Cert signing request
openssl req -new -nodes -config openssl.cfg \
        -subj "/C=US/CN=${SERVICE_NAME}.${NAMESPACE}" \
        -keyout "ca/keys/${SERVICE_NAME}.pem" \
        -out "ca/reqs/${SERVICE_NAME}.pem" >/dev/null

# Signed by CA
openssl ca -batch -config openssl.cfg \
        -keyfile ca/key.pem \
        -cert ca/cert.pem \
        -out "ca/certs/${SERVICE_NAME}.pem" \
        -infiles "ca/reqs/${SERVICE_NAME}.pem" >/dev/null

function b64() {
  if [ "$(uname)" = "Linux" ]; then
    base64 --wrap=0
  else
    base64 --break=0
  fi
}

CA_CERT="$(b64 <ca/cert.pem)"
SERVICE_CERT="$(b64 <"ca/certs/${SERVICE_NAME}.pem")"
SERVICE_KEY="$(b64 <"ca/keys/${SERVICE_NAME}.pem")"

cat <<EOF
---
apiVersion: v1
kind: Secret
metadata:
  name: ${SERVICE_NAME}-certs
  namespace: $NAMESPACE
type: Opaque
data:
  cacert.pem: $CA_CERT
  cert.pem: $SERVICE_CERT
  key.pem: $SERVICE_KEY
EOF
